//////////////////////////////////////module SELL/////////////////////////////////////////
var ItemModel = Backbone.Model.extend({ //модель елемента
       default:{
       		"id": 1,
            "name": "",
            "price": null,
            "quantity": 1,
            "ready": 1,
            "total_amount": null
        },
        url: "/sell"
});

var ItemCollection = Backbone.Collection.extend({ // колекция элементов
	model: ItemModel
});
var itemcCllection = new ItemCollection( //екземпляр класса колекций

);

var ItemView = Backbone.View.extend({ //вид елемента
    //el: $("#valera"),
    tagName: 'tr',
    events:{
       'click .delete': 'destroy',
       'change .huyvrot': 'test91'

    },
    template: _.template($('#item-template').html()),
	initialize: function() {
	    //this._ensureElement();
	      this.model.set({total_amount:this.model.get("price")})
	      this.model.on('destroy', this.remove, this);
	      this.model.on('change', this.render, this);
//		this.render();
//        return this;
	},

	render: function() {
	    var sumPrice = 100500;
		//замечательный шаблон
		this.$el.html(this.template(this.model.toJSON() ));
		//console.log(itemcCllection);
		return this;
	},

	remove: function  () {
    this.$el.remove();
},

    test91: function () {
    alert("onchamge ran");
    // console.log(this.$("input:text").val());
    this.model.set({quantity: this.$("input:text").val()})
    this.model.set({total_amount: (this.model.get("quantity")*this.model.get("price"))})
    this.$("input").val(this.model.get("quantity"))
    },
    destroy: function  (event) {
            event.preventDefault();
            this.model.destroy();
            //alert("model whos destroy");
            //console.log(itemcCllection);
        },
});

var ItemColectionPayView = Backbone.View.extend({
el: $(".marya"),
template: _.template($('#total-coast').html()),

initialize: function() {
    this.render();
    this.collection.on('remove', this.render, this);
    this.collection.on('change', this.render, this);
    return this;
	},
    events:{
       'click .totalsum': 'pay',
    },

    pay: function(){
        alert("pay");
        var dataCollection = itemcCllection.toJSON()
        console.log("thuy!!!!",dataCollection);
        console.log(JSON.stringify(dataCollection));
        $.ajax({
            type: "POST",
            crossDomain:true,
            url: '/getbarcode/',             // указываем URL и
            dataType : "json",                     // тип загружаемых данных
            contentType: 'application/json; charset=UTF-8',
            data: JSON.stringify(dataCollection),
            error: function(){
            alert('Load was performed.');
            },
             success: function (data, textStatus) { // вешаем свой обработчик на функцию success
             itemcCllection.add(data);
             console.log("Last coll", itemcCllection.last());
             console.log("colection tut",itemcCllection);
            }
        });

    },
	render: function() {
	    var totalCoast = 0
		//console.log(this.collection);

		this.collection.each(function(item) {
                totalCoast += item.get('total_amount');
         }, this);
		var markup = this.template({totalCoast: totalCoast});
		this.$el.html(markup);
		//console.log(markup);
		return this;
		console.log(template());
		console.log(this.template());
		this.$el.html(this.template(this.totalCoast));
		//this.$el.html(this.template(directory.model.toJSON()));
		//console.log(itemcCllection);
		return this;
	},
    destroy: function () {
          this.undelegateEvents();
          this.$el.removeData().unbind();

          //this.remove();
          //OR
          this.$el.empty();
      }
});

var ItemColectionView = Backbone.View.extend({ //вид колекции
el: $("#valera"),
//tagName: 'div',

initialize: function() {
this.collection.on('add', this.rerender, this);
this.render();
	},
	render: function() {
		this.collection.each(function(item) {
			var itemView = new ItemView({model: item});
			this.$el.append(itemView.render().el);
		}, this);
		console.log(this.collection);
		return this;
	},
	rerender: function(){
	    var itemView = new ItemView({model:itemcCllection.last() });
	    this.$el.append(itemView.render().el);
	    return this;
	},
    destroy: function () {
          this.undelegateEvents();
          this.$el.removeData().unbind();

          //this.remove();
          //OR
          this.$el.empty();
      }
});
 
var itemPayView = new ItemColectionPayView({collection: itemcCllection});
var itemsView = new ItemColectionView({collection: itemcCllection}); //экземпляр класса вид колекции

function getBarcode() {
            var barcode = $('#barcode').val()
            $.ajax({
            type: "GET",
            crossDomain:true,
            url: '/getbarcode/',             // указываем URL и
            data: {"barcode": barcode},
            dataType : "json",                     // тип загружаемых данных
            error: function(){
            alert('Load was performed.');
            },
             success: function (data, textStatus) { // вешаем свой обработчик на функцию success
             console.log(data)
             itemcCllection.add(data);
             console.log("Last coll", itemcCllection.last());
             console.log("colection tut",itemcCllection.toJSON());
            }
        });
};

ItemSercheTest = Backbone.View.extend({
el: $(".test"),
 tagname: 'div',
//template: _.template($('#Serche_barcode').html()),
template: _.template(' <input type="text" id="barcode" class="span2 search-query ebala"><button onclick="getBarcode()" class="btn">Найти</button>'),

initialize: function() {
    //$(".conteiner").html(this.el);
    this.render();
    return this;
    },
    events:{

 
    },

    render: function() {
    //console.log(this.$el.html(this.template()));
    // var markup = this.template();
    //     this.$el.html(markup);
        console.log("huy")
    this.$el.html(this.template());
    return this;
    },
    destroy: function () {
          this.undelegateEvents();
          this.$el.removeData().unbind();

          //this.remove();
          //OR
          this.$el.empty();
      },

     
});
var sell = new ItemSercheTest();
///////////////////////////////////////END MODULE SELL////////////////////////////////////////////////////////

///////////////////////////////////////MODULE ADDITEM/////////////////////////////////////////////////////////
var ItemModelAdd = Backbone.Model.extend({ //модель елемента
       default:{
            "name": "",
            "quantity": 1,
            "barcode": null,
        },
        url: "/sell"
});

var ItemCollectionСhoice = Backbone.Collection.extend({ // колекция элементов
    model: ItemModelAdd
});
var itemCollectionСhoice = new ItemCollectionСhoice( //екземпляр класса колекций
[
    // {name: "bolt", barcode: 111, quantity:2},
    // {name: "gayka", barcode: 222, quantity:4},
    // {name: "gvozd", barcode: 333, quantity:8}
]
);

var ItemCollectionеTable = Backbone.Collection.extend({ // колекция элементов
    model: ItemModelAdd
});
var itemCollectionTable = new ItemCollectionеTable( //екземпляр класса колекций
    [
    {name: "otvertka", barcode: 44, quantity:2},
    {name: "key", barcode: 556, quantity:4},
    {name: "kley", barcode: 789, quantity:8}
    ]
);

ItemSercheView = Backbone.View.extend({
el: $(".serchebarcode"),
 tagname: 'div',
//template: _.template($('#Serche_barcode').html()),
template: _.template('<input type="text"  id="barcode" class="span2 search-query" autocomplete="off"> <button onclick="" class="btn fbarcode">Найти</button>'),

initialize: function() {
    //$(".conteiner").html(this.el);
    this.render();
    return this;
    },
    events:{
        'click .fbarcode': 'findBarcode',
    },

    findBarcode : function () {
        alert("klick find barcode");
        //alert(this.$("input").val());
        console.log(this.$("input").val());
        var barcode = this.$("input").val();
            $.ajax({
            type: "GET",
            crossDomain:true,
            url: '/findbarcode/',             // указываем URL и  !!!!!!!!!!!!!!!!
            data: {"barcode": barcode},
            dataType : "json",                     // тип загружаемых данных
                error: function(){
                alert('Load was performed.');
                },
                 success: function (data, textStatus) { // вешаем свой обработчик на функцию success
                    console.log('1!!!!!!!!!!!!!!!!!!!!!',data);
                    //console.log("22222222222222222222222",JSON.parse(data));
                    //var x = JSON.parse(data);
                    var x = data;
                    console.log("1111112222333444", x, typeof(x));
                    console.log(x[1]);
                    var obekt= {};
//                    obekt.barcode = barcode;
//                    obekt.name = x.names[0];
//                    obekt.quantity = 1;
                    x[1].quantity = 1;
                    itemCollectionСhoice.add(x[1]);
                    console.log(itemCollectionСhoice);
                    $("input").val(" ");
                 //itemcCllection.add(data);
                 //console.log("Last coll", itemcCllection.last());
                 //console.log("colection tut",itemcCllection.toJSON());
                },
            });
    },

    render: function() {
    //console.log(this.$el.html(this.template()));
    // var markup = this.template();
    //     this.$el.html(markup);
        console.log("huy")
        this.$el.html(this.template());
        return this;
    },
    destroy: function () {
          this.undelegateEvents();
          this.$el.removeData().unbind();

          //this.remove();
          //OR
          this.$el.empty();
      }
});

var additem = new ItemSercheView();

var ItemChoiceView = Backbone.View.extend({  /////вид  выбора вариантов товара
    tagName: "tr",
    events:{
        'dblclick': 'migrateModel'
    },

    template: _.template('<td> <%= barcode %></td> <td><%= name %> </td> <td><%= quantity %> </td>'),
    initialize: function () {
        
    },

    render: function () {
        this.$el.html(this.template(this.model.toJSON()));
        return this;  
    },
    migrateModel: function () {
        alert("DUBLE CLICK");
        var caunt = prompt( ("Ведите количество "+ this.model.get("name")),0);
        this.model.set("quantity",caunt);
        itemCollectionTable.add(this.model);
        //itemCollectionСhoice.remove();
        console.log('this',itemCollectionСhoice.reset());
    },
});

var ItemCollectionСhoiceView = Backbone.View.extend({ /////вид колекции выбора вариантов товара
    el: $("#tableChoise"),
    events:{
        
    },
    initialize: function () {
        this.collection.on('add', this.rerender, this);////////////////!!!!!!!!!!
        this.collection.on('reset',this.showAlert,this);
        this.render;    
     },

    render: function() {
        this.collection.each(function(item) {
            var itemChoiceView = new ItemChoiceView({model: item});
            this.$el.append(itemChoiceView.render().el);
        }, this);
        console.log(this.collection);
        return this;
    },
    showAlert: function () {
        alert("allert collection is reset");
        this.$el.removeData().unbind();
        this.$el.empty();
    },
     rerender: function(){
        var itemChoiceView = new ItemChoiceView({model:itemCollectionСhoice.last() });
        this.$el.append(itemChoiceView.render().el);
        return this;
    },
    destroy: function () {
          this.undelegateEvents();
          this.$el.removeData().unbind();

          //this.remove();
          //OR
          this.$el.empty();
      }

});

var itemsChoiceView = new ItemCollectionСhoiceView({collection: itemCollectionСhoice});

var ItemHandheldView = Backbone.View.extend({  /////вид  выбора вариантов товара
    el: $("#handheld"),
    events:{
      'click .handadd': 'handAdd',  
    },

    template: _.template('<input type="number"  id="barcode1" class="span2 search-query"> <input type="text"  id="name1" class="span2 search-query"> <input type="number"  id="cuantiti" class="span2 search-query"> <button onclick="" class="btn handadd">Добавить</button>'),
    initialize: function () {
        
    },

    render: function () {
        this.$el.html(this.template());
        return this;  
    },
    handAdd: function () {
        alert("hand add!!!");
        console.log(this.$("input#barcode1").val());
        console.log(this.$("input#name1").val());
        console.log(this.$("input#cuantiti").val());
        handItem = {};
        ////////////////////////////////////////////////////////////!!!!!!!!!!!!!!!!!
        handItem.name = this.$("input#name1").val();
        handItem.quantity = parseInt(this.$("input#cuantiti").val(),10);
        handItem.barcode = parseInt(this.$("input#barcode1").val(),10);
        console.log(handItem);
        itemCollectionTable.add(handItem);
        console.log(itemCollectionTable);

    },
});

var itemHandheldView =new ItemHandheldView();

var AdedetItemView = Backbone.View.extend({  /////вид  еденичный конечной таблицы добавленых товаров
    tagName: "tr",
    events:{},

    template: _.template('<td> <%= barcode %></td> <td><%= name %> </td> <td><%= quantity %> </td>'),
    initialize: function () {
        
    },

    render: function () {
        this.$el.html(this.template(this.model.toJSON()));
        return this;  
    },
});

var AdededItemCollectionView = Backbone.View.extend({ /////вид колекции выбора вариантов товара
    el: $("#tableFinish"),
    initialize: function () {
        this.collection.on('add', this.rerender, this);
        this.render;    
     },

    render: function() {
        this.collection.each(function(item) {
            var adedetItemView = new AdedetItemView({model: item});
            this.$el.append(adedetItemView.render().el);
        }, this);
        console.log(this.collection);
        return this;
    },
    rerender: function(){
        var adedetItemView = new AdedetItemView({model:itemCollectionTable.last() });
        this.$el.append(adedetItemView.render().el);
        return this;
    },
    destroy: function () {
          this.undelegateEvents();
          this.$el.removeData().unbind();

          //this.remove();
          //OR
          this.$el.empty();
      }

});

var adededItemCollectionView = new AdededItemCollectionView({collection: itemCollectionTable});

////////////////////////////////////////END MODULE ADDITEM////////////////////////////////////////////////////
Router = Backbone.Router.extend({
    routes: {
        ''     : 'index',
        'sell' : 'sell',
        'additem' : 'additem',
        'admin' : 'admin' 
    },
 
    index: function() {
        console.log('Всем привет от индексного роута!');   
        sell.destroy();
         itemsView.destroy();
         itemPayView.destroy();
    },
 
    sell: function() {
        console.log('это роут Sell');   
        document.getElementById("sell page").style.display="block"; //show page with id sell page
        document.getElementById("additem page").style.display="none";   
        itemPayView.render();
        itemsView.render();
        //document.getElementById("1").style.display="none";
       // document.getElementById("2").style.display="block";
        sell.render();
        additem.destroy(); 
        adededItemCollectionView.destroy();
        itemsChoiceView.destroy();
    },

    additem: function() {
        console.log('это роут additem');   
        //var itemserchview = new ItemSercheView();
        //document.getElementById("2").style.display="none";
        //document.getElementById("sell page").style.display="block";
        document.getElementById("additem page").style.display="block"; //show page with id sell page
        document.getElementById("sell page").style.display="none";
         additem.render();
         adededItemCollectionView.render();
         itemsChoiceView.render();
         itemHandheldView.render();//
         sell.destroy();
         itemsView.destroy();
         itemPayView.destroy();
    },
    admin: function() {
        console.log('это роут admin'); 
        sell.destroy();
         itemsView.destroy();
         itemPayView.destroy();  
        //var itemserchview = new ItemSercheView();
    }

});
 
new Router();
    
Backbone.history.start();
